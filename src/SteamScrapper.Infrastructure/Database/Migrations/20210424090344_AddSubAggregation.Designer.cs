// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamScrapper.Infrastructure.Database.Context;

namespace SteamScrapper.Infrastructure.Database.Migrations
{
    [DbContext(typeof(SteamContext))]
    [Migration("20210424090344_AddSubAggregation")]
    partial class AddSubAggregation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.App", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasDefaultValueSql("N'Unknown App'");

                    b.Property<DateTime>("UtcDateTimeLastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(datetime2(7), N'2000-01-01T00:00:00+00:00')");

                    b.Property<DateTime>("UtcDateTimeRecorded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("UtcDateTimeLastModified");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.Bundle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasDefaultValueSql("N'Unknown Bundle'");

                    b.Property<DateTime>("UtcDateTimeLastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(datetime2(7), N'2000-01-01T00:00:00+00:00')");

                    b.Property<DateTime>("UtcDateTimeRecorded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("UtcDateTimeLastModified");

                    b.ToTable("Bundles");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.Sub", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasDefaultValueSql("N'Unknown Sub'");

                    b.Property<DateTime>("UtcDateTimeLastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(datetime2(7), N'2000-01-01T00:00:00+00:00')");

                    b.Property<DateTime>("UtcDateTimeRecorded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("UtcDateTimeLastModified");

                    b.ToTable("Subs");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.SubAggregation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("SubId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UtcDateTimeRecorded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.HasKey("Id");

                    b.HasIndex("SubId");

                    b.HasIndex("UtcDateTimeRecorded");

                    b.ToTable("SubAggregations");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.SubPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("SubId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UtcDateTimeRecorded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.HasKey("Id");

                    b.HasIndex("SubId");

                    b.HasIndex("UtcDateTimeRecorded");

                    b.ToTable("SubPrices");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.SubAggregation", b =>
                {
                    b.HasOne("SteamScrapper.Infrastructure.Database.Entities.Sub", "Sub")
                        .WithMany("Aggregations")
                        .HasForeignKey("SubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sub");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.SubPrice", b =>
                {
                    b.HasOne("SteamScrapper.Infrastructure.Database.Entities.Sub", "Sub")
                        .WithMany("Prices")
                        .HasForeignKey("SubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sub");
                });

            modelBuilder.Entity("SteamScrapper.Infrastructure.Database.Entities.Sub", b =>
                {
                    b.Navigation("Aggregations");

                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
